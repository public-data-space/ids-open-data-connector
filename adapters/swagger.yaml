swagger: "2.0"
info:
  description: "This OpenAPI specification describes the endpoints of an IDS Adapter App compatible with the Open Data Connector. Developers will have to implement the described webservice endpoints for the connector to properly use the app."
  version: "0.0.1"
  title: "IDs Open Data Connector Adapter App"
  contact:
    email: "vincent.bohlen@fokus.fraunhofer.de"
  license:
    name: "No license. All rights reserved"
host: "localhost:8080"
tags:
- name: "Adapter"
  description: "IDS Open Data Connector adapter endpoint description"
schemes:
- "https"
- "http"
paths:
  /create:
    post:
      tags: 
      - "Adapter"
      summary: "Create a new Data Asset."
      description: "The method returns an object of type DataAsset containing the metadata describing the data asset."
      operationId: "createId"
      parameters:
      - in: "body"
        name: "dataasset"
        required: true
        schema:
          $ref: '#/definitions/DataAssetCreateMessage'
      responses:
        200:
          description: "DataAsset successfully created"
          schema:
            $ref: "#/definitions/DataAsset"
        405:
          description: "Invalid input"
  /delete:
    post:
      tags: 
      - "Adapter"
      summary: "Delete the existing DataAsset by ID"
      description: "This method deletes the app's information about a given Data Asset by the provided ID."
      operationId: "deleteId"
      parameters:
      - name: "id"
        in: "path"
        required : true
        type: "integer"
      responses:
        200:
          description: "DataAsset successfully deleted"
        404:
          description: "DataAsset not found"
  /getFile:
    post:
      tags: 
      - "Adapter"
      summary: "Get File content for DataAsset."
      description: "Returns the file contents associated with a given Data Asset."
      operationId: "getFileId"
      parameters:
      - name: "getfile"
        in: "body"
        required: true
        schema: 
          $ref: '#/definitions/ResourceRequest'
      responses:
        200:
          description: "The file as byte stream."
          schema: 
            type: object
            properties:
              result:
                type: string
        404:
          description: "File not found"
  /supported:
    get:
      tags:
      - "Adapter"
      summary: "Return the supported data formats"
      description: "Returns a list of supported formats in which the Data Asset's content can be received."
      operationId: "supportedId"
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              type: string
          
  /getDataAssetFormSchema:
    get:
      tags:
      - "Adapter"
      summary: "Return form schema for data asset"
      description: "The UI generates the input form dynamically depending on the form schema delivered by the adapter App.
       This method therefore returns a schema describing the information necessary to register a data asset. The form schema
       is delivered in ncform format: https://github.com/ncform/ncform/blob/master/CONFIG.md#ncform-schema"
      operationId: "getDataAssetFormSchemaId"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties: {}
        404:
          description: "DataAsset not found"
  /getDataSourceFormSchema:
    get:
      tags:
      - "Adapter"
      summary: "Return form schema for data source"
      description: "The UI generates the input form dynamically depending on the form schema delivered by the adapter App.
      This method therefore returns a schema describing the information necessary to register a data source. The form schema
      is delivered in ncform format: https://github.com/ncform/ncform/blob/master/CONFIG.md#ncform-schema"
      operationId: "getDataSourceFormSchemaId"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties: {}
        404:
          description: "DataAsset not found"
definitions:
  DataSource:
    type: "object"
    properties:
      datasourceName:
        type: "string"
      datasourceType:
        type: "string"
      data:
        type: "object"
        description: "The information used to uniquely identify and/or access a data source in JSON format. This could be an URL, port, username, password, etc. The information is described by the data source form schema provided by /getDataSourceFormSchema"
        additionalProperties: {}
  DataAssetCreateMessage:
    type: "object"
    properties:
      data:
        type: "object"
        description: "The information used to uniquely identify and/or access a data asset in JSON format. This could be an URL, ID, Query, etc. The information is described by the data source form schema provided by /getDataAssetFormSchema"
        additionalProperties: {}
      dataSource:
        $ref: '#/definitions/DataSource'
      dataassetId:
        type: "integer"
        format: "int64"
      
  FileType:
    type: "string"
    enum: 
    - "JSON"
    - "XML"
    - "TXT"
    - "CSV"
    - "XSLX"
    - "TTL"
    - "JSONLD"
    - "RDF"
    - "MULTIPART"
  ResourceRequest:
    type: "object"
    properties:
      dataresource:
        $ref: '#/definitions/DataSource'
      dataasset:
        $ref: '#/definitions/DataAsset'
      filetype:
        $ref: '#/definitions/FileType'
  DataAsset:
    type: "object"
    properties:
      datasetID:
        type: "string"
      sourceID:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      url:
        type: "string"
      format:
        type: "string"
      licenseTitle:
        type: "string"
      datasetTitle:
        type: "string"
      datasetNotes:
        type: "string"
      orignalResourceURL:
        type: "string"
      orignalDatasetURL:
        type: "string"
      signature:
        type: "string"
      status:
        $ref: '#/definitions/DataAssetStatus'
      resourceID:
        type: "string"
      tags:
        type: "array"
        items:
          type: "string"
      dataSetDescription:
        type: "string"
      organizationTitle:
        type: "string"
      organizationDescription:
        type: "string"
      version:
        type: "string"
  DataAssetStatus:
    type: "string"
    enum: 
    - "UNAPPROVED"
    - "APPROVED"
    - "PUBLISHED"
